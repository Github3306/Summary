---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
MySQL安装
版本要求：5.6.5+
主机：192.168.198.164 apollo-Admin
--------------------------------------
1：清除mysql依赖包：
   rpm -qa | grep mysql
   yum remove mysql-libs

2：安装mysql5.7：安装顺序：common→libs→client→server
   rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm
   rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm
   rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm
   rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm

3：启动mysql
  service mysqld start

4：mysql初始化：
  grep 'temporary password' /var/log/mysqld.log
      A temporary password is generated for root@localhost: %hNW)P3Ly,8v
  mysql -uroot -p
      Enter password:
      Welcome to the MySQL monitor.  Commands end with ; or \g.
  # 更改密码长度
  mysql> set global validate_password_length=1;
  Query OK, 0 rows affected (0.00 sec)
  # 更改密码强度
  mysql> set global validate_password_policy=0;
  Query OK, 0 rows affected (0.00 sec)
  #设置新密码
  mysql> set password for root@localhost=password('123456');
  Query OK, 0 rows affected, 1 warning (0.00 sec)
  #授权
  mysql> grant all privileges on *.* to 'root' @'%' identified by '123456';
  Query OK, 0 rows affected, 1 warning (0.00 sec)
  #生效
  mysql> flush privileges;

5:Apollo数据库创建：SQL在官网自行下载
  mysql> source apolloconfigdb.sql;
  mysql> source apolloportaldb.sql;

  sql下载地址：
   https://github.com/apolloconfig/apollo-build-scripts/blob/master/sql/apolloportaldb.sql
   https://github.com/apolloconfig/apollo-build-scripts/blob/master/sql/apolloconfigdb.sql

6：msyql连接用户授权：
    mysql> grant all privileges on ApolloConfigDB.* to Apollo@'%' IDENTIFIED BY 'Apollo' ;
    mysql> grant all privileges on ApolloPortalDB.* to Apollo@'%';
    mysql> flush privileges;

7：修改数据库配置
   7.1修改ApolloPortalDB-ServerConfig
      key:   apollo.portal.envs
      value: dev,uat,release,master,pro   (自己设定，可支持的环境列表)
   7.2修改ApolloConfigDB-ServerConfig
      key：   eureka.service.url
      value： http://192.168.198.162:8080/eureka/   (Eureka服务Url，多个service以英文逗号分隔,apolloConfig)

8：Apollo安装
   8.1：apollo-config
        主机：192.168.198.162
     创建apollo用户：
        groupadd apollo && useradd -g apollo apollo
     配置configserver：
         mkdir /usr/local/apollo
         mkdir /usr/local/apollo/apollo-config
         unzip apollo-configservice-0.10.2-github.zip -d apollo-config
     ApolloconfigDB配置：
         vim apollo-config/config/application-github.properties
         #
         spring.datasource.url = jdbc:mysql://192.168.198.162:3306/ApolloConfigDB?characterEncoding=utf8
         spring.datasource.username = root
         spring.datasource.password = root
         #
     日志路径及JVM参数修改：部分配置，后面的配置不需要修改
         vim apollo-config/scripts/startup.sh
         # 修改日志路径
         LOG_DIR=/usr/local/apollo/logs
         # 默认端口
         SERVER_PORT=18080
         # 默认注释看需求打开
         ## Adjust memory settings if necessary
         export JAVA_OPTS="-Xms6144m -Xmx6144m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=4096m -XX:MaxNewSize=4096m -XX:SurvivorRatio=8"
     启动Apollo-configservice：
         cd /usr/local/apollo/
         chown -R apollo.apollo *
         su apollo
         ./apollo-config/scripts/startup.sh

   8.2:apollo-admin
       主机：192.168.198.163
      创建apollo用户：
         groupadd apollo && useradd -g apollo apollo
      解压：
         cd /usr/local/apollo/
         mkdir {apollo-admin,apollo-portal}
         unzip apollo-adminservice-0.10.2-github.zip -d apollo-admin
         unzip apollo-portal-0.10.2-github.zip -d apollo-portal
      配置configserver：
         cd apollo-admin
         vim config/application-github.properties
         # DataSource
         spring.datasource.url = jdbc:mysql://192.168.198.163:3306/ApolloConfigDB?characterEncoding=utf8
         spring.datasource.username = root
         spring.datasource.password = root
      日志路径及JVM参数配置：部分配置，后面的配置不需要修改:
         vim scripts/startup.sh
         #!/bin/bash
         SERVICE_NAME=apollo-adminservice
         ## Adjust log dir if necessary
         LOG_DIR=/usr/local/apollo/logs
         ## Adjust server port if necessary
         SERVER_PORT=18090
         ## Adjust memory settings if necessary
         export JAVA_OPTS="-Xms2560m -Xmx2560m -Xss256k -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=384m -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=8"
      启动apollo-admin：
         cd /usr/local/apollo/
         chown -R apollo.apollo *
         su apollo
         ./apollo-config/scripts/startup.sh

   8.3：apollo-portal
       主机：192.168.198.163
       apolloportlDB配置
          cd /usr/local/apollo/apollo-portal
          vim config/application-github.properties
          # DataSource
          spring.datasource.url = jdbc:mysql://192.168.198.163:3306/ApolloPortalDB?characterEncoding=utf8
          spring.datasource.username = root
          spring.datasource.password = root
       configservice配置：一套portal可以管理多个configservice，也可以直接配置在startup.sh脚本里：
          vim config/apollo-env.properties
          local.meta=http://localhost:8080
          dev.meta=http://10.2.42.27:8080
          fat.meta=http://10.2.42.27:8080
          uat.meta=${lpt_meta}
          lpt.meta=${lpt_meta}
          pro.meta=${lpt_meta}






























